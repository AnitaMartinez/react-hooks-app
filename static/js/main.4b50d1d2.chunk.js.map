{"version":3,"sources":["tables/UserTable.js","forms/AddUserForm.js","forms/EditUserForm.js","App.js","index.js"],"names":["UserTable","props","users","onDeleteUser","onEditUser","length","map","user","key","id","name","username","className","onClick","colSpan","AddUserForm","initialFormState","useState","setUser","handleInputChange","event","target","value","onSubmit","onAddUser","preventDefault","onChange","type","EditUserForm","setEditing","currentUser","updateUser","useEffect","usersData","App","setUsers","editingMode","setEditingMode","setCurrentUser","idOfUserToUpdate","userToUpdate","updatedUsers","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b50d1d2.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst UserTable = props => {\n    const { users, onDeleteUser, onEditUser } = props\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th>Name</th>\n                <th>Username</th>\n                <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {users.length > 0 ? (\n                users.map(user => (\n                <tr key={user.id}>\n                    <td>{user.name}</td>\n                    <td>{user.username}</td>\n                    <td>\n                    <button\n                        className=\"button muted-button\"\n                        onClick={() => onEditUser(user)}\n                    >\n                        Edit\n                    </button>\n                    <button\n                        onClick={() => onDeleteUser(user)}\n                        className=\"button muted-button\"\n                    >\n                        Delete\n                    </button>\n                    </td>\n                </tr>\n                ))\n            ) : (\n                <tr>\n                <td colSpan={3}>No users</td>\n                </tr>\n            )}\n    </tbody>\n        </table>\n    )\n}\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onDeleteUser: PropTypes.func.isRequired,\n    onEditUser: PropTypes.func.isRequired,\n}\n\nexport default UserTable","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddUserForm = props => {\n\n    const initialFormState = {name: '', username: ''}\n    const [user, setUser] = useState(initialFormState)\n\n    const handleInputChange = event => {\n        const {name, value } = event.target\n        setUser({...user, [name]: value})\n    }\n\n    const handleSubmit = event => {\n        const {onAddUser} =  props\n\n        event.preventDefault()\n        if(!user.name || !user.username) return\n        onAddUser(user)\n        setUser(initialFormState)\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label id=\"name\">Name</label>\n            <input\n                onChange={handleInputChange}\n                type=\"text\"\n                name=\"name\" value={user.name}\n            />\n            <label id=\"username\">Username</label>\n            <input\n                onChange={handleInputChange}\n                type=\"text\"\n                name=\"username\"\n                value={user.username}\n            />\n            <button>Add new user</button>\n        </form>\n    )\n}\n\n\nAddUserForm.propTypes = {\n    onAddUser: PropTypes.func.isRequired,\n}\n\nexport default AddUserForm","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nconst EditUserForm = props => {\n  const { setEditing, currentUser, updateUser } = props\n  const [user, setUser] = useState(currentUser)\n\n  useEffect(() => {\n    setUser(props.currentUser)\n  }, [props])\n\n\n  const handleInputChange = event => {\n    const { name, value } = event.target\n\n    setUser({ ...user, [name]: value })\n  }\n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault()\n        updateUser(user.id, user)\n      }}\n    >\n      <label>Name</label>\n      <input type=\"text\" name=\"name\" value={user.name} onChange={handleInputChange} />\n      <label>Username</label>\n      <input type=\"text\" name=\"username\" value={user.username} onChange={handleInputChange} />\n      <button>Update user</button>\n      <button onClick={() => setEditing(false)} className=\"button muted-button\">\n        Cancel\n      </button>\n    </form>\n  )\n}\n\nEditUserForm.propTypes = {\n  currentUser: PropTypes.object.isRequired,\n  setEditing: PropTypes.func.isRequired,\n  updateUser: PropTypes.func.isRequired,\n}\n\nexport default EditUserForm","import React, { useState } from 'react'\nimport UserTable from './tables/UserTable'\nimport AddUserForm from './forms/AddUserForm'\nimport EditUserForm from './forms/EditUserForm'\n\nconst usersData = [\n  { id: 1, name: 'Tania', username: 'floppydiskette' },\n  { id: 2, name: 'Craig', username: 'siliconeidolon' },\n  { id: 3, name: 'Ben', username: 'benisphere' },\n]\n\nconst App = () => {\n\n  const [users, setUsers ] = useState(usersData)\n\n  // When editing a user\n  const initialFormState = { id: null, name: '', username: '' }\n  const [editingMode, setEditingMode] = useState(false)\n  const [currentUser, setCurrentUser] = useState(initialFormState)\n\n  const addUser = user => {\n    user.id = users.length + 1\n    setUsers([...users, user])\n  }\n\n  const deleteUser = user => {\n    setEditingMode(false)\n    const updatedUsers = users.filter(({id}) => id !== user.id)\n    setUsers(updatedUsers)\n  }\n\n  const editRow = user => {\n    setEditingMode(true)\n    setCurrentUser({id: user.id, name: user.name, username: user.username})\n  }\n\n  const updateUser = (idOfUserToUpdate, userToUpdate) => {\n    setEditingMode(false)\n    const updatedUsers = users.map((user) => user.id === idOfUserToUpdate ? userToUpdate : user)\n    setUsers(updatedUsers)\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>CRUD App with Hooks</h1>\n      <div className=\"flex-row\">\n        <div className=\"flex-large\">\n          {\n            editingMode ? (\n              <EditUserForm\n                setEditing={setEditingMode}\n                currentUser={currentUser}\n                updateUser={updateUser}\n              />\n            ) : (\n              <div>\n              <h2>Add user</h2>\n              <AddUserForm onAddUser={addUser} editingMode={editingMode}  />\n              </div>\n            )\n          }\n        </div>\n        <div className=\"flex-large\">\n          <h2>View users</h2>\n          <UserTable\n            users={users}\n            onDeleteUser={deleteUser}\n            onEditUser={editRow}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}